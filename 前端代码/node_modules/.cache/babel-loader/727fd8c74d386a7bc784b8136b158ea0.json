{"remainingRequest":"/home/cj/Desktop/sdn (2)/node_modules/babel-loader/lib/index.js!/home/cj/Desktop/sdn (2)/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/cj/Desktop/sdn (2)/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/cj/Desktop/sdn (2)/src/views/subflow/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/cj/Desktop/sdn (2)/src/views/subflow/index.vue","mtime":1670077210633},{"path":"/home/cj/Desktop/sdn (2)/babel.config.js","mtime":1668932814000},{"path":"/home/cj/Desktop/sdn (2)/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1669556206331},{"path":"/home/cj/Desktop/sdn (2)/node_modules/unplugin-vue-components/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1669556207911},{"path":"/home/cj/Desktop/sdn (2)/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1669556206331},{"path":"/home/cj/Desktop/sdn (2)/node_modules/unplugin-vue-components/node_modules/unplugin/dist/webpack/loaders/transform.js","mtime":1669556207911},{"path":"/home/cj/Desktop/sdn (2)/node_modules/cache-loader/dist/cjs.js","mtime":1669556204363},{"path":"/home/cj/Desktop/sdn (2)/node_modules/babel-loader/lib/index.js","mtime":1669556206679},{"path":"/home/cj/Desktop/sdn (2)/node_modules/cache-loader/dist/cjs.js","mtime":1669556204363},{"path":"/home/cj/Desktop/sdn (2)/node_modules/vue-loader-v16/dist/index.js","mtime":1669556206659}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NqL0Rlc2t0b3Avc2RuICgyKS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgRWxNZXNzYWdlLCBFbE1lc3NhZ2VCb3ggfSBmcm9tICdlbGVtZW50LXBsdXMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGVMaXN0OiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVJlYXNvbjogZnVuY3Rpb24gdXBkYXRlUmVhc29uKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIHRoaXMuZmlsZVRyYW5zbWl0KGZpbGUsIGZpbGVMaXN0KTsKICAgIH0sCiAgICBmaWxlVHJhbnNtaXQ6IGZ1bmN0aW9uIGZpbGVUcmFuc21pdChmaWxlLCBmaWxlTGlzdCwgaXNTaG93KSB7CiAgICAgIHRoaXMuZmlsZUxpc3QgPSBmaWxlTGlzdDsKICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7IC8vIOaWsOW7uuS4gOS4qkZpbGVSZWFkZXIKCiAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUucmF3LCAnVVRGLTgnKTsgLy8g6K+75Y+W5paH5Lu2CgogICAgICByZWFkZXIub25sb2FkID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShldnQpIHsKICAgICAgICAgIHZhciBkYXRhSnNvbjsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgLy8g6K+75Y+W5paH5Lu25a6M5q+V5omn6KGM5q2k5Ye95pWwCiAgICAgICAgICAgICAgICAgIGRhdGFKc29uID0gZXZ0LnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXQhJyk7CiAgICAgICAgICAgICAgICAgIEVsTWVzc2FnZUJveC5jb25maXJtKCfnoa7lrprmj5DkuqQnLCAnV2FybmluZycsIHsKICAgICAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGFKc29uKTsKICAgICAgICAgICAgICAgICAgICBheGlvcyh7CiAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgICAgICAgIHVybDogJy9hZGRmbG93JywKICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogZGF0YUpzb24KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKDEyMzQpOwogICAgICAgICAgICAgICAgICAgICAgRWxNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+aPkOS6pOaIkOWKnycsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgRWxNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICflj5bmtojmj5DkuqQnCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/cj/Desktop/sdn (2)/src/views/subflow/index.vue"],"names":[],"mappings":";;AAeA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,SAAT,EAAoB,YAApB,QAAwC,cAAxC;AACA,eAAe;AACb,EAAA,IADa,kBACN;AACL,WAAO;AACL,MAAA,QAAQ,EAAE;AADL,KAAP;AAGD,GALY;AAMb,EAAA,OAAO,EAAE;AACP,IAAA,YADO,wBACM,IADN,EACY,QADZ,EACsB;AAC3B,WAAK,YAAL,CAAkB,IAAlB,EAAwB,QAAxB;AACD,KAHM;AAIP,IAAA,YAJO,wBAIM,IAJN,EAIY,QAJZ,EAIsB,MAJtB,EAI8B;AACnC,WAAK,QAAL,GAAgB,QAAhB;AACA,UAAI,MAAK,GAAI,IAAI,UAAJ,EAAb,CAFmC,CAEL;;AAC9B,MAAA,MAAM,CAAC,UAAP,CAAkB,IAAI,CAAC,GAAvB,EAA4B,OAA5B,EAHmC,CAGE;;AACrC,MAAA,MAAM,CAAC,MAAP;AAAA,2EAAgB,iBAAe,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsB;AAC9B,kBAAA,QADQ,GACG,GAAG,CAAC,MAAJ,CAAW,MADd;AAEhB,kBAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,kBAAA,YAAY,CAAC,OAAb,CACE,MADF,EAEE,SAFF,EAGE;AACE,oBAAA,iBAAiB,EAAE,IADrB;AAEE,oBAAA,gBAAgB,EAAE,IAFpB;AAGE,oBAAA,IAAI,EAAE;AAHR,mBAHF,EAQC,IARD,CAQM,YAAM;AACV,oBAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,oBAAA,KAAK,CAAC;AACF,sBAAA,MAAM,EAAE,MADN;AAEF,sBAAA,GAAG,EAAE,UAFH;AAGF,sBAAA,IAAI,EAAE;AAAE,wBAAA,IAAI,EAAE;AAAR;AAHJ,qBAAD,CAAL,CAIK,IAJL,CAIU,UAAA,GAAE,EAAK;AACb,sBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,sBAAA,SAAS,CAAC;AACR,wBAAA,OAAO,EAAE,MADD;AAER,wBAAA,IAAI,EAAE;AAFE,uBAAD,CAAT;AAID,qBAVH;AAWE,oBAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB;AACD,mBAtBH,EAuBC,KAvBD,CAuBO,YAAM;AACX,oBAAA,SAAS,CAAC;AACN,sBAAA,IAAI,EAAE,MADA;AAEN,sBAAA,OAAO,EAAE;AAFH,qBAAD,CAAT;AAIE,oBAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB;AACH,mBA7BD;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhB;;AAAA;AAAA;AAAA;AAAA;AAkCA;AA1CK;AANI,CAAf","sourcesContent":["<template>\r\n  <div>\r\n    <el-upload\r\n      action\r\n      :on-change=\"updateReason\"\r\n      :auto-upload=\"false\"\r\n      accept=\".json\"\r\n      list-type=\"multipart/form-data\"\r\n    >\r\n      <el-button size=\"small\" type=\"primary\">上传</el-button>\r\n      <div class=\"el-upload__tip\">只能上传JSON文件</div>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nexport default {\r\n  data() {\r\n    return {\r\n      fileList: []\r\n    }\r\n  },\r\n  methods: {\r\n    updateReason(file, fileList) {\r\n      this.fileTransmit(file, fileList)\r\n    },\r\n    fileTransmit(file, fileList, isShow) {\r\n      this.fileList = fileList\r\n      var reader = new FileReader() // 新建一个FileReader\r\n      reader.readAsText(file.raw, 'UTF-8') // 读取文件\r\n      reader.onload = async function(evt) { // 读取文件完毕执行此函数\r\n        const dataJson = evt.target.result\r\n      console.log('submit!')\r\n      ElMessageBox.confirm(\r\n        '确定提交',\r\n        'Warning',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n      .then(() => {\r\n        console.log(dataJson)\r\n        axios({\r\n            method: 'post',\r\n            url: '/addflow',\r\n            data: { text: dataJson }\r\n          }).then(res => {\r\n            console.log(1234)\r\n            ElMessage({\r\n              message: '提交成功',\r\n              type: 'success'\r\n            })\r\n          })\r\n          window.location.reload()\r\n        })\r\n      .catch(() => {\r\n        ElMessage({\r\n            type: 'info',\r\n            message: '取消提交'\r\n          })\r\n          window.location.reload()\r\n      })\r\n    }\r\n      }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":""}]}